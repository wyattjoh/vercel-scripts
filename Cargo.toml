# RUST LEARNING: Cargo.toml is like package.json but more structured
# - [package] section defines metadata (like "name", "version" fields in package.json)
# - Much more explicit than package.json's flexible structure
[package]
name = "vss"
version = "0.2.7"
edition = "2021"
authors = ["Wyatt Johnson"]
description = "Vercel Scripts Selector - Interactive script runner for Vercel development workflows"
license = "MIT"
repository = "https://github.com/wyattjoh/vercel-scripts"
keywords = ["cli", "vercel", "scripts", "development", "workflow"]
categories = ["command-line-utilities", "development-tools"]

# RUST LEARNING: [[bin]] defines binary targets (executables)
# - Like "bin" field in package.json but more explicit
# - Can have multiple binaries in one crate
[[bin]]
name = "vss"
path = "src/main.rs"

# RUST LEARNING: [dependencies] section lists external crates (like npm dependencies)
# - Version constraints use semver but with different syntax than npm
# - No devDependencies - dev deps go in [dev-dependencies] section
[dependencies]
# RUST LEARNING: Feature flags control what code gets compiled
# - Like optional dependencies but at compile-time, not runtime
# - More granular than package.json's "optionalDependencies"
clap = { version = "4.0", features = ["derive", "cargo"] }
clap_complete = "4.5"
inquire = "0.7.5"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
colored = "3.0"
comfy-table = "7.0"
regex = "1.0"
petgraph = "0.8"
include_dir = "0.7"
thiserror = "2.0"
anyhow = "1.0"
dirs = "6.0"
log = "0.4"
env_logger = "0.11"
strum = { version = "0.27", features = ["derive"] }
tempfile = "3.0"


# RUST LEARNING: [profile.release] configures release builds (like webpack production config)
# - These optimizations create smaller, faster binaries
# - No equivalent in Node.js/npm - closest is webpack optimization settings
[profile.release]
opt-level = 3     # Maximum optimization (0-3, like -O3 in C/C++)
lto = true        # Link-time optimization (removes unused code across crates)
codegen-units = 1 # Single compilation unit for better optimization
panic = "abort"   # Don't unwind stack on panic (smaller binary)
strip = true      # Remove debug symbols from binary
